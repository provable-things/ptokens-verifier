# Auto-generated by asn1ate v.0.6.0 from google_attestation2.asn
# (last modified on 2020-10-01 08:51:19.123142)

from pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful


class AttestationPackageInfo(univ.Sequence):
    pass


AttestationPackageInfo.componentType = namedtype.NamedTypes(
    namedtype.NamedType('package', univ.OctetString()),
    namedtype.NamedType('version', univ.Integer())
)


class AttestationApplicationId(univ.Sequence):
    pass


AttestationApplicationId.componentType = namedtype.NamedTypes(
    namedtype.NamedType('package', univ.SetOf(componentType=AttestationPackageInfo())),
    namedtype.NamedType('signature', univ.SetOf(componentType=univ.OctetString()))
)


class VerifiedBootState(univ.Enumerated):
    pass


VerifiedBootState.namedValues = namedval.NamedValues(
    ('verified', 0),
    ('selfSigned', 1),
    ('unverified', 2),
    ('failed', 3)
)


class RootOfTrust(univ.Sequence):
    pass


RootOfTrust.componentType = namedtype.NamedTypes(
    namedtype.NamedType('verifiedBootKey', univ.OctetString()),
    namedtype.NamedType('deviceLocked', univ.Boolean()),
    namedtype.NamedType('verifiedBootState', VerifiedBootState()),
    namedtype.NamedType('verifiedBootHash', univ.OctetString())
)


class AuthorizationList(univ.Sequence):
    pass


AuthorizationList.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('purpose', univ.SetOf(componentType=univ.Integer()).subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('algorithm', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('keySize', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('digest', univ.SetOf(componentType=univ.Integer()).subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('padding', univ.SetOf(componentType=univ.Integer()).subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('ecCurve', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 10))),
    namedtype.OptionalNamedType('rsaPublicExponent', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 200))),
    namedtype.OptionalNamedType('rollbackResistance', univ.Null().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 303))),
    namedtype.OptionalNamedType('activeDateTime', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 400))),
    namedtype.OptionalNamedType('originationExpireDateTime', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 401))),
    namedtype.OptionalNamedType('usageExpireDateTime', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 402))),
    namedtype.OptionalNamedType('noAuthRequired', univ.Null().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 503))),
    namedtype.OptionalNamedType('userAuthType', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 504))),
    namedtype.OptionalNamedType('authTimeout', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 505))),
    namedtype.OptionalNamedType('allowWhileOnBody', univ.Null().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 506))),
    namedtype.OptionalNamedType('trustedUserPresenceRequired', univ.Null().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 507))),
    namedtype.OptionalNamedType('trustedConfirmationRequired', univ.Null().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 508))),
    namedtype.OptionalNamedType('unlockedDeviceRequired', univ.Null().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 509))),
    namedtype.OptionalNamedType('allApplications', univ.Null().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 600))),
    namedtype.OptionalNamedType('applicationId', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 601))),
    namedtype.OptionalNamedType('creationDateTime', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 701))),
    namedtype.OptionalNamedType('origin', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 702))),
    namedtype.OptionalNamedType('rootOfTrust', RootOfTrust().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 704))),
    namedtype.OptionalNamedType('osVersion', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 705))),
    namedtype.OptionalNamedType('osPatchLevel', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 706))),
    namedtype.OptionalNamedType('attestationApplicationId', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 709))),
    namedtype.OptionalNamedType('attestationIdBrand', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 710))),
    namedtype.OptionalNamedType('attestationIdDevice', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 711))),
    namedtype.OptionalNamedType('attestationIdProduct', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 712))),
    namedtype.OptionalNamedType('attestationIdSerial', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 713))),
    namedtype.OptionalNamedType('attestationIdImei', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 714))),
    namedtype.OptionalNamedType('attestationIdMeid', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 715))),
    namedtype.OptionalNamedType('attestationIdManufacturer', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 716))),
    namedtype.OptionalNamedType('attestationIdModel', univ.OctetString().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 717))),
    namedtype.OptionalNamedType('vendorPatchLevel', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 718))),
    namedtype.OptionalNamedType('bootPatchLevel', univ.Integer().subtype(explicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 719)))
)


class SecurityLevel(univ.Enumerated):
    pass


SecurityLevel.namedValues = namedval.NamedValues(
    ('software', 0),
    ('trustedEnvironment', 1),
    ('strongBox', 2)
)


class KeyDescription(univ.Sequence):
    pass


KeyDescription.componentType = namedtype.NamedTypes(
    namedtype.NamedType('attestationVersion', univ.Integer()),
    namedtype.NamedType('attestationSecurityLevel', SecurityLevel()),
    namedtype.NamedType('keymasterVersion', univ.Integer()),
    namedtype.NamedType('keymasterSecurityLevel', SecurityLevel()),
    namedtype.NamedType('attestationChallenge', univ.OctetString()),
    namedtype.NamedType('uniqueId', univ.OctetString()),
    namedtype.NamedType('softwareEnforced', AuthorizationList()),
    namedtype.NamedType('teeEnforced', AuthorizationList())
)


